package com.thaituan.admin.user;

import static org.assertj.core.api.Assertions.assertThat;

import org.junit.jupiter.api.Test;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase;
import org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase.Replace;
import org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest;
import org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManager;
import org.springframework.test.annotation.Rollback;

import com.thaituan.common.entity.Role;
import com.thaituan.common.entity.User;

@DataJpaTest
@AutoConfigureTestDatabase(replace = Replace.NONE)
@Rollback(false)
public class UserRepositoryTests {
	@Autowired
	private UserRepository repo;
	
	@Autowired
	private TestEntityManager entityManager;
	
	@Test
	public void testCreateNewUserWithOneRole() {
		Role roleAdmin = entityManager.find(Role.class, 1);
		User userTuanNT = new User("thaituan@gmail.com", "thaituan2000", "Thai", "Tuan");
		userTuanNT.addRole(roleAdmin);
			
		User savedUser = repo.save(userTuanNT);
		assertThat(savedUser.getId()).isGreaterThan(0);
	}

	@Test
	public void testCreateNewUserWithTwoRoles() {
		User userTwoRoles = new User("chijun@gmail.com", "chijun0109", "Chi", "Jun");
		Role roleEditor = new Role(3);
		Role roleAssistant= new Role(5);
		
		userTwoRoles.addRole(roleEditor);
		userTwoRoles.addRole(roleAssistant);
		User savedUser = repo.save(userTwoRoles);
		
		assertThat(savedUser.getId()).isGreaterThan(0);
	}
	
	@Test
	public void testListAllUsers() {
		Iterable<User> listUsers = repo.findAll();
		listUsers.forEach(user -> System.out.println(user));
	}
	
	@Test
	public void testGetUserById() {
		User userTuanNT = repo.findById(1).get();
		System.out.println(userTuanNT);
		assertThat(userTuanNT).isNotNull();
	}
	
	@Test
	public void testUpdateUserDetails() {
		User userTuanNT = repo.findById(1).get();
		userTuanNT.setEnabled(true);
		userTuanNT.setEmail("thaituannguyen@gmail.com");
		repo.save(userTuanNT);
	}
	
	@Test
	public void testUpdateUserRoles() {
		User userChiJun = repo.findById(1).get();
		Role roleEditor = new Role(3);
		Role roleSalesperson = new Role(2);
		userChiJun.getRoles().remove(roleEditor);
		userChiJun.addRole(roleSalesperson);
		repo.save(userChiJun);
	}
}
